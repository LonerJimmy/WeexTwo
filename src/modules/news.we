<template>

    <div>
        <list class="news-list">
        <refresh class="refresh_view" display="{{refresh_display}}" onrefresh="onRefresh" >
                <text class="refresh-arrow" if="{{(refresh_display==='hide')}}">刷新中...</text>
                <loading-indicator></loading-indicator>
        </refresh>

        <cell class="top-slider">
                        <slider class="top-slider" append="tree" auto-play="true" interval="5000">
                            <indicator class="indicator"></indicator>
                            <div repeat="img in imageList">
                                <image class="slider-item" src="{{img.image}}" imgid="{{img.id}}" onclick="onSliderItemClick"></image>
                                 <text class="title">{{img.title}}</text>
                            </div>
                        </slider>
        </cell>

        <cell class="list_item" repeat="item in newsList" newsid="{{item.id}}"
                onclick="onNewsDetail" >
                <read_item title="{{item.title}}" date="{{date}}"
                image="{{item.images[0]}}"></read_item>
        </cell>
        </list>
    </div>
</template>

<style>
   .top-slider {
           flex-direction: row;
           top: 20px;
           height: 500px;
           width: 750px;
       }

       .title {
           position: absolute;
           bottom: 42px;
           left: 20px;
           width: 500px;
           color: #FFFFFF;
           font-size: 28px;
         }

       .slider-item {
           height: 500px;
           width: 750px;
       }
        .indicator {
            position: absolute;
            width: 690px;
            height: 400px;
            top: 240px;
            left: 240px;
            itemColor: #dddddd;
            itemSelectedColor: #45b5f0;
            item-size: 15;
    }

    .news-list{
        margin-left: 20px;
        margin-right: 20px;
    }

    .list_item{
        justify-content: center;
        border-bottom-width: 1px;
        border-bottom-color: #d4d4d4;
        padding-left: 10px;
        padding-right: 10px;
        padding-bottom: 20px;
        padding-top: 20px;
    }

    .refresh_view{
        height: 80px;
        width: 750px;
        justify-content: center;
        align-items: center;
    }
</style>

<script>
    require('weex-components');
    var apis = require('../common/api');
    var navigator = require('@weex-module/navigator');

    module.exports = {
        data: {
            refresh_display: 'hide',
            newsList: [],
            imageList:[],
            date:"",
            baseURL: ''
        },
        methods: {
            onRefresh: function (e) {
                  var self = this;
                  self.refresh_display = 'show';
                  self.getNewsData();
                  self.refresh_display = 'hide';
                },
            getNewsData:function() {
                var self=this;
                apis.getNewsList(function(ret) {
                    self.date=ret.date;
                    for (var i = 0; i < ret.stories.length; i++) {
                        var items = ret.stories[i];
                        self.newsList.push(items);
                    }
                    self.imageList=ret.top_stories;
                })
                },
                onNewsDetail: function (e) {
                     var itemid = e.target.attr.newsid;
                     var params = {
                         'url': this.baseURL + 'modules/news_detail.js?id=' + itemid,
                         'animated': 'true'
                     };
                     navigator.push(params, function (e) {
                     });
                },
                onSliderItemClick: function(e) {
                    var itemid = e.target.attr.imgid;
                    var params = {
                         'url': this.baseURL + 'modules/news_detail.js?id=' + itemid,
                         'animated': 'true'
                    };
                    navigator.push(params, function (e) {
                    });
                }
            },
             created:function() {
                            var self = this;
                            self.getNewsData();
                            var base = apis.getBaseUrl(self.$getConfig().bundleUrl, true);
                            self.baseURL = base;
                        },
             ready:function() {
                        }
    }
</script>